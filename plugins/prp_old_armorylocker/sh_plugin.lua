local PLUGIN = PLUGIN

PLUGIN.name = "Armory Locker"
PLUGIN.author = "Maj.Kat & sil"
PLUGIN.description = "Armory Locker for jobs"


ix.util.Include("sv_hooks.lua", "server")
ix.util.Include("cl_hooks.lua", "client")

local charMeta = ix.meta.character 

local guns = {}

PLUGIN.lockerMisc = {}


PLUGIN.lockerMisc = {
    ["ammo"] = {
        name = "Ammo",
        category = "Misc",
        model = "models/Items/BoxMRounds.mdl",
        fov = 80,
        cost = 0,
        desc = "Refill the ammo for your current loadout!",
        buyFunc = function(ply) PLUGIN:GiveAmmo(ply) end,
        entang = Angle(0, 50, 0),
        fov = 50,
        vec = Vector(0, 50, 6)
    }, 

    ["armor"] = {
        name = "Kevlar & Helmet",
        category = "Misc",
        model = "models/eft_paca_armor/paca_soft_armor.mdl",
        fov = 80,
        cost = 0,
        desc = "Equip yourself with kevlar and helmet armor!",
        buyFunc = function(ply) PLUGIN:GiveArmor(ply) end,
        entang = Angle(0, 70, 0),
        fov = 50,
        vec = Vector(0, 50, 3)
    },
}

PLUGIN.lockerItems = { -- sorry for fov, vec, and angles, I was not content with the autogenerated stuff
			["weapon_pistol"] = {
				name = "Five Seven",
				entclass = "weapon_pistol",
				ammoCap = 90,
				cost = 0,
				category = "Secondary",
                fov = 25,
                vec = Vector(2, 50, 3.3),
			},

			-- ["khr_m92fs"] = {
			-- 	name = "M92FS",
			-- 	entclass = "khr_m92fs",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Secondary" 
			-- },	

			-- ["heretic_cw2_m27"] = {
			-- 	name = "M4 Carbine",
			-- 	entclass = "heretic_cw2_m27",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Primary" 
			-- },

			-- ["cw_ber_sig552"] = {
			-- 	name = "SIG 552",
			-- 	entclass = "cw_ber_sig552",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Primary",
            --     vec = Vector(5.5, 50, 1)
			-- },


            -- ["cw_m3super90"] = {
			-- 	name = "Super 90",
			-- 	entclass = "cw_m3super90",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Primary",
            --     fov = 45,
            --     vec = Vector(10, 65, 0),
            -- },

            -- ["cw_ar15"] = {
			-- 	name = "AR-15",
			-- 	entclass = "cw_ar15",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Primary",
            --     fov = 40,
            --     vec = Vector(-5, 65, 5),
            -- },

            -- ["cw_mr96"] = {
			-- 	name = "MR96",
			-- 	entclass = "cw_mr96",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Secondary",
            --     fov = 20,
            --     vec = Vector(5, 65, 0),
            --     entang = Angle(5, 35, 0), 
            -- },

            -- ["cw_p99"] = {
			-- 	name = "P99",
			-- 	entclass = "cw_p99",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Secondary",
            --     fov = 17,
            --     vec = Vector(1, 65, 3), 
            -- },

            -- ["cw_l115"] = {
			-- 	name = "Lapua",
			-- 	entclass = "cw_l115",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Primary",
            --     fov = 45,
            --     vec = Vector(12.5, 65, 0),
            -- },

            -- ["cw_flash_grenade"] = {
			-- 	name = "Flash Grenade",
			-- 	entclass = "cw_flash_grenade",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Grenades",
            --     fov = 30,
            --     vec = Vector(0, 50, 3.5),
            -- },

            -- ["cw_smoke_grenade"] = {
			-- 	name = "Smoke Grenade",
			-- 	entclass = "cw_smoke_grenade",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Grenades",
            --     fov = 30,
            --     vec = Vector(0, 50, 3.5),
            -- },

            -- ["cw_frag_grenade"] = {
			-- 	name = "Frag Grenade",
			-- 	entclass = "cw_frag_grenade",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Grenades",
            --     fov = 25,
            --     vec = Vector(0, 50, 1),
            -- },

            -- ["cw_g18"] = {
			-- 	name = "Glock-18",
			-- 	entclass = "cw_g18",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Secondary",
            --     fov = 20,
            --     vec = Vector(0, 65, -2.5),
            --     entang = Angle(0, -90, 5), 
            -- },

            -- ["cw_nen_glock17"] = {
			-- 	name = "Glock-17",
			-- 	entclass = "cw_nen_glock17",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Secondary",
            --     fov = 17,
            --     vec = Vector(5, 65, 1), 
            -- },

            -- ["cw_hk416"] = {
			-- 	name = "HK416",
			-- 	entclass = "cw_hk416",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Primary",
            --     fov = 40,
            --     vec = Vector(7, 65, 0),
            -- },

            -- ["cw_mp5"] = {
			-- 	name = "MP5",
			-- 	entclass = "cw_mp5",
			-- 	ammoCap = 90,
			-- 	cost = 0,
			-- 	category = "Primary",
            --     fov = 40,
            --     vec = Vector(2.5, 65, 7),
            -- },

}

-- @TODO: Remove and fix the bottom mess.
PLUGIN.weaponItems["weapon_pistol"] = {
    name = "Five Seven",
    entclass = "weapon_pistol",
    ammoCap = 90,
    cost = 0,
    category = "Secondary",
    fov = 25,
    vec = Vector(2, 50, 3.3),
    model = "models/weapons/w_pistol.mdl",
}

-- @TODO: Holy hell.
function PLUGIN:InitializedPlugins()

    ix.armoryWeapons = {}

    function ixAddArmoryWeapon(tab)
        ix.armoryWeapons = ix.armoryWeapons or {}

        ix.armoryWeapons[tab.entclass] = tab
    end 

    for k,v in pairs(PLUGIN.lockerItems) do 
        ixAddArmoryWeapon(v)
    end 


    for k,v in pairs(ix.faction.indices) do
        if isfunction(v) or !v.Ranks then continue end 

        local classListIndex

        for k,v in pairs(ix.faction.indices) do
            if isfunction(v) or !v.Ranks then continue end 

            local classListIndex

            for rankIndex, rankTable in pairs(v.Ranks) do 
                if rankTable.lockerWeapons then 
                    for classIndex, classTable in ipairs(ix.class.list) do  
                        if classTable.uniqueID == rankTable.uniqueID then 
                            classListIndex = classIndex
                        end 
                    end 

                    for index, gunTab in pairs(rankTable.lockerWeapons) do

                        if !ix.faction.indices[k].Ranks[rankIndex].lockerWeapons_ then 
                            ix.faction.indices[k].Ranks[rankIndex].lockerWeapons_ = {}
                        end

                        ix.faction.indices[k].Ranks[rankIndex].lockerWeapons_[gunTab] = ix.armoryWeapons[gunTab]
                        ix.class.list[classListIndex].lockerWeapons_ = ix.class.list[classListIndex].lockerWeapons_ or {}
                        ix.class.list[classListIndex].lockerWeapons_[gunTab] = ix.armoryWeapons[gunTab]
                    end 
                end 
            end 
        end 
    end


    for k,v in pairs(ix.faction.indices) do
        if isfunction(v) or !v.Ranks then continue end 
        
        for _,rankTable in pairs(v.Ranks) do 
            if rankTable.lockerWeapons_ then 
                for index, gunTab in pairs(rankTable.lockerWeapons_) do
                    guns[gunTab.entclass] = true
                end 
            end 
        end 
    end 

    PLUGIN.attachmentTable = {}
    PLUGIN.attachPlugin = ix.plugin.list["cw2attachments"]
    local weaponsTable = weapons.GetList()
    -- PLUGIN.weaponItems = {}
    PLUGIN.errorm = "An error has occurred!"

    -- for class, _ in pairs(guns) do 
    --     PLUGIN.weaponItems[class] = true 
    -- end 

    -- for k,v in pairs(weaponsTable) do
    --     if PLUGIN.weaponItems[v.ClassName] and v.Attachments then 
    --         local availAttachments = PLUGIN.attachPlugin:RetrieveAttachments(v.Attachments)
            
    --         if !table.IsEmpty(availAttachments) then 
    --             PLUGIN.attachmentTable[v.ClassName] = availAttachments
    --         end 
    --     end 
    -- end

    function charMeta:GetWeaponsArmoryTable()
        if self:GetClass() then 
            local lockerTable = table.Copy(ix.class.Get(self:GetClass()).lockerWeapons_)

            if lockerTable then 
                table.Merge(lockerTable, PLUGIN.lockerMisc)
            end 
            
            return lockerTable or {}
        end 
    end
end 